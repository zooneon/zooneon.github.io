{"version":3,"file":"dfba4f580abac6232699e1f7cd136ef69e8af772-adb550d55e53d212a23e.js","mappings":"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","sources":["webpack://gatsby-minimal-blog/./src/context/ThemeContext.js","webpack://gatsby-minimal-blog/./src/components/ThemeToggle.js","webpack://gatsby-minimal-blog/./src/components/header.js","webpack://gatsby-minimal-blog/./src/components/tags.js","webpack://gatsby-minimal-blog/./src/components/search.js","webpack://gatsby-minimal-blog/./src/components/layout.js","webpack://gatsby-minimal-blog/./src/utils/styled-link.js","webpack://gatsby-minimal-blog/./src/utils/media.js","webpack://gatsby-minimal-blog/./src/components/PostList.js","webpack://gatsby-minimal-blog/./node_modules/styled-theming/index.js","webpack://gatsby-minimal-blog/./src/utils/theme.js","webpack://gatsby-minimal-blog/./src/components/seo.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\nimport { GlobalStyle } from '../utils/theme';\n\n// 테마 컨텍스트 생성\nexport const ThemeContext = createContext({\n  mode: 'light',\n  toggleTheme: () => {},\n});\n\n// 테마 상태 관리 및 Provider 컴포넌트\nexport const ThemeProvider = ({ children }) => {\n  // 로컬 스토리지에서 테마 상태 불러오기 (기본값: light)\n  const [themeMode, setThemeMode] = useState('light');\n\n  useEffect(() => {\n    // 브라우저에서만 실행되도록 체크\n    if (typeof window !== 'undefined') {\n      const savedTheme = localStorage.getItem('theme');\n      // 저장된 테마가 있으면 사용, 없으면 시스템 설정 확인\n      if (savedTheme) {\n        setThemeMode(savedTheme);\n      } else if (\n        window.matchMedia &&\n        window.matchMedia('(prefers-color-scheme: dark)').matches\n      ) {\n        setThemeMode('dark');\n      }\n    }\n  }, []);\n\n  // 테마 토글 함수\n  const toggleTheme = () => {\n    const newTheme = themeMode === 'light' ? 'dark' : 'light';\n    setThemeMode(newTheme);\n    // 로컬 스토리지에 테마 상태 저장\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('theme', newTheme);\n    }\n  };\n\n  // 테마 컨텍스트 값\n  const themeContext = {\n    mode: themeMode,\n    toggleTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={themeContext}>\n      <StyledThemeProvider theme={{ mode: themeMode }}>\n        <GlobalStyle />\n        {children}\n      </StyledThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../context/ThemeContext';\n\nconst ToggleContainer = styled.button`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 8px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${(props) =>\n      props.theme.mode === 'light'\n        ? 'rgba(0, 0, 0, 0.05)'\n        : 'rgba(255, 255, 255, 0.1)'};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst IconSVG = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: none;\n  stroke: ${(props) => (props.theme.mode === 'light' ? '#555' : '#eee')};\n  stroke-width: 2;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  transition: all 0.3s ease;\n`;\n\nconst ThemeToggle = () => {\n  const { mode, toggleTheme } = useContext(ThemeContext);\n\n  return (\n    <ToggleContainer\n      onClick={toggleTheme}\n      aria-label={`${mode === 'light' ? '다크모드로 전환' : '라이트모드로 전환'}`}\n      title={`${mode === 'light' ? '다크모드로 전환' : '라이트모드로 전환'}`}\n    >\n      {mode === 'light' ? (\n        <IconSVG viewBox=\"0 0 24 24\">\n          <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\" />\n        </IconSVG>\n      ) : (\n        <IconSVG viewBox=\"0 0 24 24\">\n          <circle cx=\"12\" cy=\"12\" r=\"5\" />\n          <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\n          <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\n          <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\n          <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\n          <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\n          <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\n          <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\n          <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\n        </IconSVG>\n      )}\n    </ToggleContainer>\n  );\n};\n\nexport default ThemeToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StyledLink from '../utils/styled-link';\nimport media from '../utils/media';\nimport ThemeToggle from './ThemeToggle';\nimport { headerBackgroundColor } from '../utils/theme';\n\nconst Container = styled.nav`\n  box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.05);\n  height: 6rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n  background-color: ${headerBackgroundColor};\n  transition: all 0.3s ease;\n\n  &.scrolled {\n    box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst HeaderContent = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 1300px;\n  padding: 0 2rem;\n  position: relative;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 800;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n  margin: 0;\n  text-align: center;\n\n  ${media.phone`\n    font-size: 1.4rem;\n  `}\n`;\n\nconst ThemeToggleWrapper = styled.div`\n  position: absolute;\n  right: 2rem;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nconst Header = ({ title }) => {\n  const [scrolled, setScrolled] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      const isScrolled = window.scrollY > 10;\n      if (isScrolled !== scrolled) {\n        setScrolled(isScrolled);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [scrolled]);\n\n  return (\n    <Container className={scrolled ? 'scrolled' : ''}>\n      <HeaderContent>\n        <StyledLink to={'/'}>\n          <Title>{title}</Title>\n        </StyledLink>\n        <ThemeToggleWrapper>\n          <ThemeToggle />\n        </ThemeToggleWrapper>\n      </HeaderContent>\n    </Container>\n  );\n};\n\nHeader.defaultProps = {\n  title: '',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport {\n  tagBackgroundColor,\n  tagTextColor,\n  tagHoverBackgroundColor,\n} from '../utils/theme';\n\nconst TagList = styled.div`\n  margin: 2rem 0;\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n`;\n\nconst Tag = styled(Link)`\n  background: ${tagBackgroundColor};\n  padding: 0.7rem 1rem;\n  border-radius: 6px;\n  color: ${tagTextColor};\n  text-decoration: none;\n  font-size: 1.4rem;\n  transition: all 0.2s;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid\n    ${(props) => (props.theme.mode === 'light' ? '#eee' : '#444')};\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n\n  &:hover {\n    background: ${tagHoverBackgroundColor};\n    color: white;\n    transform: translateY(-2px);\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst TagName = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-weight: 500;\n`;\n\nconst TagIcon = styled.span`\n  font-size: 1.2rem;\n`;\n\nconst TagCount = styled.span`\n  background: ${(props) =>\n    props.theme.mode === 'light'\n      ? 'rgba(0, 0, 0, 0.05)'\n      : 'rgba(255, 255, 255, 0.1)'};\n  padding: 0.3rem 0.7rem;\n  border-radius: 12px;\n  font-size: 1rem;\n  color: ${(props) => (props.theme.mode === 'light' ? '#666' : '#ccc')};\n  font-weight: 500;\n\n  ${Tag}:hover & {\n    background: rgba(255, 255, 255, 0.2);\n    color: white;\n  }\n`;\n\nconst Tags = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(limit: 2000) {\n        group(field: { frontmatter: { tags: SELECT } }) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `);\n\n  const { group } = data.allMarkdownRemark;\n\n  return (\n    <>\n      <TagList>\n        {group.map((tag) => (\n          <Tag key={tag.fieldValue} to={`/tags/${tag.fieldValue}/`}>\n            <TagName>\n              <TagIcon>#</TagIcon>\n              {tag.fieldValue}\n            </TagName>\n            <TagCount>{tag.totalCount}개 글</TagCount>\n          </Tag>\n        ))}\n      </TagList>\n    </>\n  );\n};\n\nexport default Tags;\n","import React, { useState } from 'react';\nimport { navigate } from 'gatsby';\nimport styled from 'styled-components';\nimport media from '../utils/media';\nimport { tagTextColor, searchInputBackgroundColor } from '../utils/theme';\n\nconst SearchContainer = styled.div`\n  margin: 2rem 0;\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n`;\n\nconst SearchForm = styled.form`\n  display: flex;\n  border-radius: 6px;\n  overflow: hidden;\n  border: 1px solid\n    ${(props) => (props.theme.mode === 'light' ? '#eee' : '#444')};\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  transition: all 0.3s ease;\n\n  &:focus-within {\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n    transform: translateY(-2px);\n  }\n`;\n\nconst SearchInput = styled.input`\n  flex: 1;\n  padding: 0.7rem 1rem;\n  border: none;\n  background: ${searchInputBackgroundColor};\n  font-size: 1.4rem;\n  outline: none;\n  color: ${tagTextColor};\n  font-weight: 500;\n\n  &::placeholder {\n    color: ${(props) => (props.theme.mode === 'light' ? '#aaa' : '#777')};\n  }\n\n  ${media.tablet`\n    font-size: 1.3rem;\n  `}\n`;\n\nconst SearchButton = styled.button`\n  background: ${(props) => (props.theme.mode === 'light' ? '#444' : '#555')};\n  color: white;\n  border: none;\n  padding: 0 1.4rem;\n  font-size: 1.4rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-weight: 500;\n  min-width: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n\n  &:hover {\n    background: ${(props) => (props.theme.mode === 'light' ? '#333' : '#666')};\n    transform: translateX(2px);\n  }\n\n  svg {\n    width: 15px;\n    height: 15px;\n  }\n`;\n\n// 검색 아이콘 컴포넌트\nconst SearchIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\n  </svg>\n);\n\nconst Search = () => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (query.trim()) {\n      navigate(`/search?q=${encodeURIComponent(query)}`);\n    }\n  };\n\n  return (\n    <SearchContainer>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          placeholder=\"블로그 검색...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          aria-label=\"블로그 검색\"\n        />\n        <SearchButton type=\"submit\">\n          <SearchIcon />\n        </SearchButton>\n      </SearchForm>\n    </SearchContainer>\n  );\n};\n\nexport default Search;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport Tags from './tags';\nimport Search from './search';\nimport media from '../utils/media';\nimport ThemeProvider from '../context/ThemeContext';\nimport { backgroundColor, cardBorderColor } from '../utils/theme';\n\nconst Footer = styled.footer`\n  display: block;\n  height: 6rem;\n`;\n\nconst MainContainer = styled.div`\n  margin-left: 0;\n  min-height: 100vh;\n  position: relative;\n  background-color: ${backgroundColor};\n  transition: all 0.3s ease;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  max-width: 1300px;\n  margin: 0 auto;\n  padding: 0;\n  gap: 7rem;\n  min-height: calc(100vh - 100px);\n\n  ${media.tablet`\n    flex-direction: column;\n    min-height: auto;\n    padding: 0 1rem;\n  `}\n`;\n\nconst TagsContainer = styled.div`\n  width: 220px;\n  padding: 2rem 0;\n  position: sticky;\n  top: 50%;\n  transform: translateY(-50%);\n  height: fit-content;\n  max-height: 70vh;\n  overflow-y: auto;\n  margin-left: 1rem;\n\n  ${media.tablet`\n    width: 100%;\n    position: static;\n    padding: 1rem 0;\n    transform: none;\n    border-bottom: 1px solid ${cardBorderColor};\n    margin-bottom: 1rem;\n    max-height: none;\n    margin-left: 0;\n  `}\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 2rem;\n  max-width: 800px;\n\n  ${media.tablet`\n    padding: 1rem 0;\n  `}\n`;\n\nclass Layout extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <ThemeProvider>\n        <StaticQuery\n          query={graphql`\n            query SiteTitleQuery {\n              site {\n                siteMetadata {\n                  title\n                }\n              }\n            }\n          `}\n          render={(data) => (\n            <>\n              <Header title={data.site.siteMetadata.title} />\n              <MainContainer>\n                <ContentWrapper>\n                  <TagsContainer>\n                    <Search />\n                    <Tags />\n                  </TagsContainer>\n                  <Content>\n                    {children}\n                    <Footer />\n                  </Content>\n                </ContentWrapper>\n              </MainContainer>\n            </>\n          )}\n        />\n      </ThemeProvider>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { textColor } from './theme';\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: ${(props) =>\n    props.theme.mode === 'light' ? textColor.light : '#64b5f6'};\n  transition: color 0.2s ease;\n`;\n\nexport default StyledLink;\n","import { css } from 'styled-components';\n\nconst sizes = {\n  desktop: 992,\n  tablet: 768,\n  phone: 576,\n};\n\n// Iterate through the sizes and create a media template\nconst media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `;\n\n  return acc;\n}, {});\n\nexport default media;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport {\n  cardBackgroundColor,\n  cardBorderColor,\n  tagBackgroundColor,\n  tagTextColor,\n  tagHoverBackgroundColor,\n} from '../utils/theme';\n\nconst PostListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2.5rem;\n`;\n\nconst PostItem = styled.article`\n  border: 1px solid ${cardBorderColor};\n  border-radius: 8px;\n  padding: 2rem;\n  transition: all 0.2s ease;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.03);\n  background-color: ${cardBackgroundColor};\n\n  &:hover {\n    box-shadow: ${(props) =>\n      props.theme.mode === 'light'\n        ? '0 5px 15px rgba(0, 0, 0, 0.07)'\n        : '0 5px 15px rgba(255, 255, 255, 0.07)'};\n    transform: translateY(-3px);\n  }\n`;\n\nconst PostTitle = styled.h2`\n  font-size: 1.8rem;\n  margin-bottom: 0.8rem;\n  line-height: 1.4;\n\n  a {\n    color: ${(props) => (props.theme.mode === 'light' ? '#333' : '#f0f0f0')};\n    text-decoration: none;\n    transition: color 0.2s ease;\n\n    &:hover {\n      color: ${(props) =>\n        props.theme.mode === 'light' ? '#3498db' : '#64b5f6'};\n    }\n  }\n`;\n\nconst PostMeta = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  font-size: 0.95rem;\n  color: ${(props) => (props.theme.mode === 'light' ? '#777' : '#d0d0d0')};\n`;\n\nconst PostDate = styled.time`\n  margin-right: 1.5rem;\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '📅';\n    margin-right: 0.5rem;\n    font-size: 1rem;\n  }\n`;\n\nconst PostTags = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n`;\n\nconst PostTag = styled(Link)`\n  font-size: 0.85rem;\n  padding: 0.2rem 0.6rem;\n  background-color: ${tagBackgroundColor};\n  color: ${tagTextColor};\n  border-radius: 3px;\n  text-decoration: none;\n  transition: all 0.2s ease;\n  border: 1px solid\n    ${(props) => (props.theme.mode === 'light' ? '#eee' : '#444')};\n\n  &:hover {\n    background-color: ${tagHoverBackgroundColor};\n    color: white;\n  }\n`;\n\nconst PostExcerpt = styled.p`\n  margin: 0;\n  color: ${(props) => (props.theme.mode === 'light' ? '#555' : '#d0d0d0')};\n  line-height: 1.6;\n  font-size: 1.1rem;\n`;\n\nconst ReadMore = styled(Link)`\n  display: inline-block;\n  margin-top: 1.2rem;\n  color: ${(props) => (props.theme.mode === 'light' ? '#3498db' : '#64b5f6')};\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 0.95rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: ${(props) => (props.theme.mode === 'light' ? '#2980b9' : '#90caf9')};\n    text-decoration: underline;\n  }\n\n  &::after {\n    content: ' →';\n  }\n`;\n\nconst PostList = ({ posts }) => {\n  return (\n    <PostListContainer>\n      {posts.map(({ node }) => {\n        const { frontmatter, fields, excerpt } = node;\n        const { title, date, tags } = frontmatter;\n        const { slug } = fields;\n\n        return (\n          <PostItem key={slug}>\n            <PostTitle>\n              <Link to={slug}>{title}</Link>\n            </PostTitle>\n            <PostMeta>\n              <PostDate>{date}</PostDate>\n              {tags && tags.length > 0 && (\n                <PostTags>\n                  {tags.map((tag) => (\n                    <PostTag key={tag} to={`/tags/${tag}/`}>\n                      #{tag}\n                    </PostTag>\n                  ))}\n                </PostTags>\n              )}\n            </PostMeta>\n            <PostExcerpt>{excerpt}</PostExcerpt>\n            <ReadMore to={slug}>계속 읽기</ReadMore>\n          </PostItem>\n        );\n      })}\n    </PostListContainer>\n  );\n};\n\nexport { PostList };\n","'use strict';\n\nfunction getThemeValue(name, props, values) {\n  var value = (\n    props.theme &&\n    props.theme[name]\n  );\n\n  var themeValue;\n\n  if (typeof value === 'function') {\n    themeValue = value(values);\n  } else {\n    themeValue = values[value];\n  }\n\n  if (typeof themeValue === 'function') {\n    return themeValue(props);\n  } else {\n    return themeValue;\n  }\n}\n\nfunction theme(name, values) {\n  return function(props) {\n    return getThemeValue(name, props, values);\n  };\n}\n\ntheme.variants = function(name, prop, values) {\n  return function(props) {\n    var variant = props[prop] && values[props[prop]];\n    return variant && getThemeValue(name, props, variant);\n  };\n};\n\nmodule.exports = theme;\n","import { createGlobalStyle } from 'styled-components';\nimport theme from 'styled-theming';\n\n// 배경색 테마\nexport const backgroundColor = theme('mode', {\n  light: '#ffffff',\n  dark: '#212121',\n});\n\n// 텍스트 색상 테마\nexport const textColor = theme('mode', {\n  light: 'rgba(0, 0, 0, 0.8)',\n  dark: 'rgba(255, 255, 255, 0.95)',\n});\n\n// 코드 배경색 테마\nexport const codeBackgroundColor = theme('mode', {\n  light: '#7F8487',\n  dark: '#545454',\n});\n\n// 코드 텍스트 색상 테마\nexport const codeTextColor = theme('mode', {\n  light: '#666',\n  dark: '#f0f0f0',\n});\n\n// 태그 배경색 테마\nexport const tagBackgroundColor = theme('mode', {\n  light: '#f5f5f5',\n  dark: '#404040',\n});\n\n// 태그 텍스트 색상 테마\nexport const tagTextColor = theme('mode', {\n  light: '#444',\n  dark: '#f0f0f0',\n});\n\n// 태그 호버 배경색 테마\nexport const tagHoverBackgroundColor = theme('mode', {\n  light: '#444',\n  dark: '#777',\n});\n\n// 카드 배경색 테마\nexport const cardBackgroundColor = theme('mode', {\n  light: '#ffffff',\n  dark: '#2a2a2a',\n});\n\n// 카드 테두리 색상 테마\nexport const cardBorderColor = theme('mode', {\n  light: '#eee',\n  dark: '#444',\n});\n\n// 헤더 배경색 테마\nexport const headerBackgroundColor = theme('mode', {\n  light: '#ffffff',\n  dark: '#212121',\n});\n\n// 검색 입력창 배경색 테마\nexport const searchInputBackgroundColor = theme('mode', {\n  light: '#f5f5f5',\n  dark: '#404040',\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: system;\n    font-style: normal;\n    font-weight: 300;\n    src: local('.SFNSText-Light'), local('.HelveticaNeueDeskInterface-Light'),\n      local('.LucidaGrandeUI'), local('Ubuntu Light'), local('Segoe UI Light'),\n      local('Roboto-Light'), local('DroidSans'), local('Tahoma');\n  }\n\n  :root {\n    font-size: 10px;\n  }\n\n  body {\n    font-family: 'system';\n    margin: 0;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    background-color: ${backgroundColor};\n    color: ${textColor};\n    min-height: 100vh;\n    position: relative;\n    font-size: 1.6rem;\n    transition: all 0.3s ease;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: sans-serif;\n    color: ${textColor};\n  }\n\n  h2 {\n    font-size: 2.5rem;\n  }\n\n  h3 {\n    font-size: 2.4rem;\n  }\n\n  h4 {\n    font-size: 1.6rem;\n  }\n  \n  code {\n    font-family: Menlo,Monaco,\"Courier New\",Courier,monospace;\n    word-break: break-word;\n    background-color: ${codeBackgroundColor};\n    color: ${codeTextColor};\n    padding: 0.2rem 0.4rem;\n    border-radius: 3px;\n    font-size: 0.9em;\n  }\n\n  pre code {\n    word-break: normal;\n    background-color: transparent;\n    padding: 0;\n  }\n\n  :not(pre) > code[class*=\"language-\"], pre[class*=\"language-text\"] {\n    background-color: transparent;\n    color: ${codeTextColor};\n    font-size: medium;\n  }\n\n  a {\n    transition: color 0.2s ease;\n    color: ${(props) => (props.theme.mode === 'light' ? '#0366d6' : '#64b5f6')};\n  }\n\n  blockquote {\n    border-left: 4px solid ${(props) => (props.theme.mode === 'light' ? '#eee' : '#555')};\n    background-color: ${(props) => (props.theme.mode === 'light' ? '#f9f9f9' : '#2e2e2e')};\n    padding: 1rem;\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  hr {\n    border: none;\n    height: 1px;\n    background-color: ${(props) => (props.theme.mode === 'light' ? '#eee' : '#555')};\n  }\n\n  table {\n    border-collapse: collapse;\n    width: 100%;\n    margin: 1rem 0;\n  }\n\n  th, td {\n    border: 1px solid ${(props) => (props.theme.mode === 'light' ? '#eee' : '#555')};\n    padding: 0.5rem;\n  }\n\n  th {\n    background-color: ${(props) => (props.theme.mode === 'light' ? '#f5f5f5' : '#404040')};\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction Seo({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(detailsQuery);\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <>\n      <html lang={lang} />\n      <title>{title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={site.siteMetadata.siteUrl} />\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata.author} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <link rel=\"icon\" href=\"/favicon.ico\" />\n      {keywords.length > 0 && (\n        <meta name=\"keywords\" content={keywords.join(`, `)} />\n      )}\n      {meta.map((metaItem) => (\n        <meta\n          key={metaItem.name || metaItem.property}\n          name={metaItem.name}\n          property={metaItem.property}\n          content={metaItem.content}\n        />\n      ))}\n    </>\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ko`,\n  meta: [],\n  keywords: [],\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        siteUrl\n      }\n    }\n  }\n`;\n"],"names":["ThemeContext","createContext","mode","toggleTheme","_ref","children","themeMode","setThemeMode","useState","useEffect","window","savedTheme","localStorage","getItem","matchMedia","matches","themeContext","newTheme","setItem","React","Provider","value","StyledThemeProvider","theme","GlobalStyle","ToggleContainer","styled","button","withConfig","displayName","componentId","props","IconSVG","svg","ThemeToggle","useContext","onClick","title","viewBox","d","cx","cy","r","x1","y1","x2","y2","Container","nav","headerBackgroundColor","HeaderContent","div","Title","h1","media","phone","ThemeToggleWrapper","Header","scrolled","setScrolled","handleScroll","isScrolled","scrollY","addEventListener","removeEventListener","className","StyledLink","to","defaultProps","TagList","Tag","Link","tagBackgroundColor","tagTextColor","tagHoverBackgroundColor","TagName","span","TagIcon","TagCount","Tags","data","useStaticQuery","group","allMarkdownRemark","map","tag","key","fieldValue","totalCount","SearchContainer","SearchForm","form","SearchInput","input","searchInputBackgroundColor","tablet","SearchButton","SearchIcon","xmlns","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Search","query","setQuery","onSubmit","e","preventDefault","trim","navigate","encodeURIComponent","type","placeholder","onChange","target","Footer","footer","MainContainer","backgroundColor","ContentWrapper","TagsContainer","cardBorderColor","Content","Layout","_Component","apply","arguments","_inheritsLoose","prototype","render","this","ThemeProvider","StaticQuery","site","siteMetadata","Component","textColor","light","sizes","desktop","Object","keys","reduce","acc","label","css","PostListContainer","PostItem","article","cardBackgroundColor","PostTitle","h2","PostMeta","PostDate","time","PostTags","PostTag","PostExcerpt","p","ReadMore","PostList","posts","_ref2","node","frontmatter","fields","excerpt","date","tags","slug","length","getThemeValue","name","values","themeValue","variants","prop","variant","module","exports","dark","codeBackgroundColor","codeTextColor","createGlobalStyle","Seo","description","lang","meta","keywords","detailsQuery","metaDescription","content","property","siteUrl","author","rel","href","join","metaItem"],"sourceRoot":""}