{"version":3,"file":"component---src-pages-search-js-8a4b444b6be92b4ed287.js","mappings":"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","sources":["webpack://gatsby-minimal-blog/./src/pages/search.js","webpack://gatsby-minimal-blog/./src/components/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { PostList } from '../components/PostList';\nimport styled from 'styled-components';\nimport media from '../utils/media';\n\nconst SearchPageContainer = styled.div`\n  width: 100%;\n`;\n\nconst SearchResultHeader = styled.div`\n  margin: 2rem 0 3rem;\n`;\n\nconst SearchTitle = styled.h1`\n  font-size: 2.2rem;\n  color: ${(props) => (props.theme.mode === 'light' ? '#333' : '#f5f5f5')};\n  margin-bottom: 1rem;\n\n  ${media.tablet`\n    font-size: 1.8rem;\n  `}\n`;\n\nconst SearchResultInfo = styled.p`\n  color: ${(props) => (props.theme.mode === 'light' ? '#666' : '#d0d0d0')};\n  font-size: 1.3rem;\n`;\n\nconst NoResults = styled.div`\n  margin: 4rem 0;\n  color: ${(props) => (props.theme.mode === 'light' ? '#666' : '#d0d0d0')};\n\n  h2 {\n    font-size: 1.8rem;\n    margin-bottom: 1rem;\n    color: ${(props) => (props.theme.mode === 'light' ? '#333' : '#f0f0f0')};\n  }\n\n  p {\n    font-size: 1.4rem;\n  }\n`;\n\nconst SearchPage = ({ data, location }) => {\n  const allPosts = data.allMarkdownRemark.edges;\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const query = params.get('q') || '';\n    setSearchQuery(query);\n\n    if (query) {\n      // 검색어를 소문자로 변환\n      const lowerCaseQuery = query.toLowerCase();\n\n      // 제목, 태그, 내용에서 검색\n      const filteredPosts = allPosts.filter(({ node }) => {\n        const { title, tags } = node.frontmatter;\n        const { excerpt } = node;\n\n        const titleMatch =\n          title && title.toLowerCase().includes(lowerCaseQuery);\n        const tagsMatch =\n          tags &&\n          tags.some((tag) => tag.toLowerCase().includes(lowerCaseQuery));\n        const contentMatch =\n          excerpt && excerpt.toLowerCase().includes(lowerCaseQuery);\n\n        return titleMatch || tagsMatch || contentMatch;\n      });\n\n      setSearchResults(filteredPosts);\n    } else {\n      setSearchResults([]);\n    }\n  }, [location.search, allPosts]);\n\n  return (\n    <Layout>\n      <SEO title={searchQuery ? `\"${searchQuery}\" 검색 결과` : '검색'} />\n      <SearchPageContainer>\n        {searchQuery ? (\n          <>\n            <SearchResultHeader>\n              <SearchTitle>\"{searchQuery}\" 검색 결과</SearchTitle>\n              <SearchResultInfo>\n                {searchResults.length}개의 포스트를 찾았습니다\n              </SearchResultInfo>\n            </SearchResultHeader>\n\n            {searchResults.length > 0 ? (\n              <PostList posts={searchResults} />\n            ) : (\n              <NoResults>\n                <h2>검색 결과가 없습니다</h2>\n                <p>다른 검색어로 다시 시도해보세요</p>\n              </NoResults>\n            )}\n          </>\n        ) : (\n          <SearchResultHeader>\n            <SearchTitle>검색어를 입력하세요</SearchTitle>\n          </SearchResultHeader>\n        )}\n      </SearchPageContainer>\n    </Layout>\n  );\n};\n\nexport default SearchPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 160)\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"YYYY년 MM월 DD일\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport {\n  cardBackgroundColor,\n  cardBorderColor,\n  tagBackgroundColor,\n  tagTextColor,\n  tagHoverBackgroundColor,\n} from '../utils/theme';\n\nconst PostListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2.5rem;\n`;\n\nconst PostItem = styled.article`\n  border: 1px solid ${cardBorderColor};\n  border-radius: 8px;\n  padding: 2rem;\n  transition: all 0.2s ease;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.03);\n  background-color: ${cardBackgroundColor};\n\n  &:hover {\n    box-shadow: ${(props) =>\n      props.theme.mode === 'light'\n        ? '0 5px 15px rgba(0, 0, 0, 0.07)'\n        : '0 5px 15px rgba(255, 255, 255, 0.07)'};\n    transform: translateY(-3px);\n  }\n`;\n\nconst PostTitle = styled.h2`\n  font-size: 1.8rem;\n  margin-bottom: 0.8rem;\n  line-height: 1.4;\n\n  a {\n    color: ${(props) => (props.theme.mode === 'light' ? '#333' : '#f0f0f0')};\n    text-decoration: none;\n    transition: color 0.2s ease;\n\n    &:hover {\n      color: ${(props) =>\n        props.theme.mode === 'light' ? '#3498db' : '#64b5f6'};\n    }\n  }\n`;\n\nconst PostMeta = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  font-size: 0.95rem;\n  color: ${(props) => (props.theme.mode === 'light' ? '#777' : '#d0d0d0')};\n`;\n\nconst PostDate = styled.time`\n  margin-right: 1.5rem;\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '📅';\n    margin-right: 0.5rem;\n    font-size: 1rem;\n  }\n`;\n\nconst PostTags = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n`;\n\nconst PostTag = styled(Link)`\n  font-size: 0.85rem;\n  padding: 0.2rem 0.6rem;\n  background-color: ${tagBackgroundColor};\n  color: ${tagTextColor};\n  border-radius: 3px;\n  text-decoration: none;\n  transition: all 0.2s ease;\n  border: 1px solid\n    ${(props) => (props.theme.mode === 'light' ? '#eee' : '#444')};\n\n  &:hover {\n    background-color: ${tagHoverBackgroundColor};\n    color: white;\n  }\n`;\n\nconst PostExcerpt = styled.p`\n  margin: 0;\n  color: ${(props) => (props.theme.mode === 'light' ? '#555' : '#d0d0d0')};\n  line-height: 1.6;\n  font-size: 1.1rem;\n`;\n\nconst ReadMore = styled(Link)`\n  display: inline-block;\n  margin-top: 1.2rem;\n  color: ${(props) => (props.theme.mode === 'light' ? '#3498db' : '#64b5f6')};\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 0.95rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: ${(props) => (props.theme.mode === 'light' ? '#2980b9' : '#90caf9')};\n    text-decoration: underline;\n  }\n\n  &::after {\n    content: ' →';\n  }\n`;\n\nconst PostList = ({ posts }) => {\n  return (\n    <PostListContainer>\n      {posts.map(({ node }) => {\n        const { frontmatter, fields, excerpt } = node;\n        const { title, date, tags } = frontmatter;\n        const { slug } = fields;\n\n        return (\n          <PostItem key={slug}>\n            <PostTitle>\n              <Link to={slug}>{title}</Link>\n            </PostTitle>\n            <PostMeta>\n              <PostDate>{date}</PostDate>\n              {tags && tags.length > 0 && (\n                <PostTags>\n                  {tags.map((tag) => (\n                    <PostTag key={tag} to={`/tags/${tag}/`}>\n                      #{tag}\n                    </PostTag>\n                  ))}\n                </PostTags>\n              )}\n            </PostMeta>\n            <PostExcerpt>{excerpt}</PostExcerpt>\n            <ReadMore to={slug}>계속 읽기</ReadMore>\n          </PostItem>\n        );\n      })}\n    </PostListContainer>\n  );\n};\n\nexport { PostList };\n"],"names":["SearchPageContainer","styled","div","withConfig","displayName","componentId","SearchResultHeader","SearchTitle","h1","props","theme","mode","media","tablet","SearchResultInfo","p","NoResults","_ref","data","location","allPosts","allMarkdownRemark","edges","searchResults","setSearchResults","useState","searchQuery","setSearchQuery","useEffect","query","URLSearchParams","search","get","lowerCaseQuery","toLowerCase","filteredPosts","filter","_ref2","node","title","tags","frontmatter","excerpt","titleMatch","includes","tagsMatch","some","tag","contentMatch","React","Layout","SEO","length","PostList","posts","PostListContainer","PostItem","article","cardBorderColor","cardBackgroundColor","PostTitle","h2","PostMeta","PostDate","time","PostTags","PostTag","Link","tagBackgroundColor","tagTextColor","tagHoverBackgroundColor","PostExcerpt","ReadMore","map","fields","date","slug","key","to"],"sourceRoot":""}