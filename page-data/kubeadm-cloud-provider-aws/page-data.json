{"componentChunkName":"component---src-templates-blog-post-js","path":"/kubeadm-cloud-provider-aws/","result":{"data":{"site":{"siteMetadata":{"title":"zooneon's log","author":"zooneon"}},"markdownRemark":{"id":"ec1e50b5-3320-5a03-aef3-64c50ab4e3a8","excerpt":"개요 AWS EC2를 이용하여 쿠버네티스 클러스터를 구축할 경우 해당 클러스터가 AWS 환경에서 동작하고 있음을 알게 하기 위해서는 별도의 작업이 필요하다. 이 작업을 통해 API를 이용하여 별도의 작업 없이 클러스터 상에서 AWS의 서비스(ELB…","html":"<h3>개요</h3>\n<p>AWS EC2를 이용하여 쿠버네티스 클러스터를 구축할 경우 해당 클러스터가 AWS 환경에서 동작하고 있음을 알게 하기 위해서는 별도의 작업이 필요하다.</p>\n<p>이 작업을 통해 API를 이용하여 별도의 작업 없이 클러스터 상에서 AWS의 서비스(ELB, EBS 등등)을 이용할 수 있다.</p>\n<p>테스트 환경은 다음과 같다.</p>\n<ul>\n<li>Kubernetes v1.21.1</li>\n<li>Docker v20.10.21</li>\n</ul>\n<h3>EC2 hostname 설정</h3>\n<p>AWS의 private DNS를 사용할 수 있도록 인스턴스의 hostname을 다음과 같이 변경한다.</p>\n<p><code class=\"language-text\">ip-xxx-xxx-xxx-xxx.&lt;region>.compute.internal</code></p>\n<p>다음 명령을 이용하면 간편하게 설정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> hostnamectl set-hostname <span class=\"token punctuation\">\\</span>\n<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> http://169.254.169.254/latest/meta-data/local-hostname<span class=\"token variable\">)</span></span>\n\n$ <span class=\"token function\">hostname</span>\nip-10-0-3-xxx.ap-northeast-2.compute.internal</code></pre></div>\n<h3>IAM 정책, 역할 생성해서 EC2 연결</h3>\n<p>인스턴스가 AWS 서비스를 이용할 수 있도록 정책을 생성한 뒤, 역할을 만들어 인스턴스에 연결한다.</p>\n<p>마스터 노드가 수행하는 일이 더 많으므로 더 많은 정책이 필요하다.</p>\n<ul>\n<li>master 노드\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"Version\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2012-10-17\"</span>,\n  <span class=\"token string\">\"Statement\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"Effect\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Allow\"</span>,\n      <span class=\"token string\">\"Action\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"autoscaling:DescribeAutoScalingGroups\"</span>,\n        <span class=\"token string\">\"autoscaling:DescribeLaunchConfigurations\"</span>,\n        <span class=\"token string\">\"autoscaling:DescribeTags\"</span>,\n        <span class=\"token string\">\"ec2:DescribeInstances\"</span>,\n        <span class=\"token string\">\"ec2:DescribeRegions\"</span>,\n        <span class=\"token string\">\"ec2:DescribeRouteTables\"</span>,\n        <span class=\"token string\">\"ec2:DescribeSecurityGroups\"</span>,\n        <span class=\"token string\">\"ec2:DescribeSubnets\"</span>,\n        <span class=\"token string\">\"ec2:DescribeVolumes\"</span>,\n        <span class=\"token string\">\"ec2:CreateSecurityGroup\"</span>,\n        <span class=\"token string\">\"ec2:CreateTags\"</span>,\n        <span class=\"token string\">\"ec2:CreateVolume\"</span>,\n        <span class=\"token string\">\"ec2:ModifyInstanceAttribute\"</span>,\n        <span class=\"token string\">\"ec2:ModifyVolume\"</span>,\n        <span class=\"token string\">\"ec2:AttachVolume\"</span>,\n        <span class=\"token string\">\"ec2:AuthorizeSecurityGroupIngress\"</span>,\n        <span class=\"token string\">\"ec2:CreateRoute\"</span>,\n        <span class=\"token string\">\"ec2:DeleteRoute\"</span>,\n        <span class=\"token string\">\"ec2:DeleteSecurityGroup\"</span>,\n        <span class=\"token string\">\"ec2:DeleteVolume\"</span>,\n        <span class=\"token string\">\"ec2:DetachVolume\"</span>,\n        <span class=\"token string\">\"ec2:RevokeSecurityGroupIngress\"</span>,\n        <span class=\"token string\">\"ec2:DescribeVpcs\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:AddTags\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:AttachLoadBalancerToSubnets\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:CreateLoadBalancer\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:CreateLoadBalancerPolicy\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:CreateLoadBalancerListeners\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:ConfigureHealthCheck\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DeleteLoadBalancer\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DeleteLoadBalancerListeners\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DescribeLoadBalancers\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DescribeLoadBalancerAttributes\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DetachLoadBalancerFromSubnets\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:ModifyLoadBalancerAttributes\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:RegisterInstancesWithLoadBalancer\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:AddTags\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:CreateListener\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:CreateTargetGroup\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DeleteListener\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DeleteTargetGroup\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DescribeListeners\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DescribeLoadBalancerPolicies\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DescribeTargetGroups\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DescribeTargetHealth\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:ModifyListener\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:ModifyTargetGroup\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:RegisterTargets\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:DeregisterTargets\"</span>,\n        <span class=\"token string\">\"elasticloadbalancing:SetLoadBalancerPoliciesOfListener\"</span>,\n        <span class=\"token string\">\"iam:CreateServiceLinkedRole\"</span>,\n        <span class=\"token string\">\"kms:DescribeKey\"</span>\n      <span class=\"token punctuation\">]</span>,\n      <span class=\"token string\">\"Resource\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"*\"</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>worker 노드\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"Version\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2012-10-17\"</span>,\n  <span class=\"token string\">\"Statement\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"Effect\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Allow\"</span>,\n      <span class=\"token string\">\"Action\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"ec2:DescribeInstances\"</span>,\n        <span class=\"token string\">\"ec2:DescribeRegions\"</span>,\n        <span class=\"token string\">\"ecr:GetAuthorizationToken\"</span>,\n        <span class=\"token string\">\"ecr:BatchCheckLayerAvailability\"</span>,\n        <span class=\"token string\">\"ecr:GetDownloadUrlForLayer\"</span>,\n        <span class=\"token string\">\"ecr:GetRepositoryPolicy\"</span>,\n        <span class=\"token string\">\"ecr:DescribeRepositories\"</span>,\n        <span class=\"token string\">\"ecr:ListImages\"</span>,\n        <span class=\"token string\">\"ecr:BatchGetImage\"</span>\n      <span class=\"token punctuation\">]</span>,\n      <span class=\"token string\">\"Resource\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"*\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<p>역할을 생성했으면 인스턴스에 연결한다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/59433441/203196186-3c34cee4-0e07-4e36-ace1-9474ae234a78.png\" alt=\"ec2-role\"></p>\n<h3>태그 등록</h3>\n<p><code class=\"language-text\">AWS Cloud Provider</code>가 인식할 수 있도록 해당 리소스에 다음과 같은 태그를 붙여야 한다.</p>\n<p>태그를 붙이지 않으면 리소스를 인식하지 못하여 <code class=\"language-text\">kubeadm init</code> 시에 오류가 발생한다.</p>\n<p>먼저 태그에는 두 가지 속성이 있다.</p>\n<ul>\n<li><code class=\"language-text\">kubernetes.io/cluster/&lt;your_cluster_id>: owned</code> : 리소스가 클러스터에 의해 소유되고 관리되는 경우</li>\n<li><code class=\"language-text\">kubernetes.io/cluster/&lt;your_cluster_id>: shared</code> : 리소스가 여러 클러스터 간에 공유되고, 클러스터가 삭제되어도 유지되어야 하는 경우</li>\n</ul>\n<p>아래 리소스에 해당하는 태그를 붙인다.</p>\n<ul>\n<li>Instance\n<ul>\n<li><code class=\"language-text\">kubernetes.io/cluster/&lt;your_cluster_id>: owned|shared</code></li>\n</ul>\n</li>\n<li>Subnet\n<ul>\n<li>Public Subnet : <code class=\"language-text\">kubernetes.io/role/elb: 1</code></li>\n<li>Private Subnet : <code class=\"language-text\">kubernetes.io/role/internal-elb: 1</code></li>\n<li>모든 Subnet : <code class=\"language-text\">kubernetes.io/cluster/&lt;your_cluster_id>: owned|shared</code></li>\n</ul>\n</li>\n<li>Routing Table\n<ul>\n<li>Cloud Controller Manager가 <code class=\"language-text\">--configure-cloud-routes: \"false\"</code> 옵션으로 시작되지 않는 경우 Subnet처럼 태그를 지정</li>\n</ul>\n</li>\n<li>Security Group\n<ul>\n<li><code class=\"language-text\">kubernetes.io/cluster/&lt;your_cluster_id>: owned|shared</code></li>\n</ul>\n</li>\n</ul>\n<h3>Configuration 파일 적용</h3>\n<p><code class=\"language-text\">kubeadm</code>을 이용하여 클러스터를 구축하는 경우 configuration 파일에 <code class=\"language-text\">cloud-provider</code> 옵션을 추가해야 한다.</p>\n<p>3가지 경우에 맞게 configuration 파일을 적용한다.</p>\n<ul>\n<li>\n<p>control plane 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># control-plane.yaml</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubeadm.k8s.io/v1beta2\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ClusterConfiguration\n<span class=\"token key atrule\">apiServer</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">extraArgs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">authorization-mode</span><span class=\"token punctuation\">:</span> Node<span class=\"token punctuation\">,</span>RBAC\n    <span class=\"token key atrule\">cloud-provider</span><span class=\"token punctuation\">:</span> aws <span class=\"token comment\"># cloud-provider 옵션 추가</span>\n  <span class=\"token key atrule\">timeoutForControlPlane</span><span class=\"token punctuation\">:</span> 4m0s\n<span class=\"token key atrule\">certificatesDir</span><span class=\"token punctuation\">:</span> /etc/kubernetes/pki\n<span class=\"token key atrule\">clusterName</span><span class=\"token punctuation\">:</span> &lt;cluster<span class=\"token punctuation\">-</span>name<span class=\"token punctuation\">></span> <span class=\"token comment\"># 태그에 지정할 클러스터 이름을 명시</span>\n<span class=\"token key atrule\">controlPlaneEndpoint</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Endpoint:포트번호'</span> <span class=\"token comment\"># HA 구성 시 &lt;LB Endpoint:포트번호></span>\n<span class=\"token key atrule\">controllerManager</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">extraArgs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">cloud-provider</span><span class=\"token punctuation\">:</span> aws <span class=\"token comment\"># cloud-provider 옵션 추가</span>\n<span class=\"token key atrule\">dns</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> CoreDNS\n<span class=\"token key atrule\">etcd</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">local</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">dataDir</span><span class=\"token punctuation\">:</span> /var/lib/etcd\n<span class=\"token key atrule\">imageRepository</span><span class=\"token punctuation\">:</span> k8s.gcr.io\n\n<span class=\"token key atrule\">networking</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">dnsDomain</span><span class=\"token punctuation\">:</span> cluster.local\n  <span class=\"token key atrule\">podSubnet</span><span class=\"token punctuation\">:</span> 192.168.0.0/16\n  <span class=\"token key atrule\">serviceSubnet</span><span class=\"token punctuation\">:</span> 10.96.0.0/12\n<span class=\"token key atrule\">scheduler</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubeadm.k8s.io/v1beta2\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> InitConfiguration\n<span class=\"token key atrule\">nodeRegistration</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">kubeletExtraArgs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">cloud-provider</span><span class=\"token punctuation\">:</span> aws <span class=\"token comment\"># cloud-provider 옵션 추가</span></code></pre></div>\n<p>아래와 같은 명령으로 configuration 파일을 적용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubeadm init <span class=\"token parameter variable\">--config</span> control-plane.yaml</code></pre></div>\n<p>만약 HA를 구성한다면 다음 명령을 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubeadm init <span class=\"token parameter variable\">--config</span> control-plane.yaml --upload-certs</code></pre></div>\n</li>\n<li>\n<p>HA를 위해 다수의 control plane을 이용</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># control-plane-join.yaml</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubeadm.k8s.io/v1beta3\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> JoinConfiguration\n<span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">bootstrapToken</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> 123456.a4v4ii39rupz51j3 <span class=\"token comment\"># token 값</span>\n    <span class=\"token key atrule\">apiServerEndpoint</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'cp-lb.us-west-2.elb.amazonaws.com:6443'</span> <span class=\"token comment\"># 엔드포인트로 사용할 LB는 미리 생성</span>\n    <span class=\"token key atrule\">caCertHashes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sha256:193feed98fb5fd2b4974...'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># hash 값</span>\n<span class=\"token key atrule\">nodeRegistration</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ip<span class=\"token punctuation\">-</span>10<span class=\"token punctuation\">-</span>0<span class=\"token punctuation\">-</span>4<span class=\"token punctuation\">-</span>xxx.ap<span class=\"token punctuation\">-</span>northeast<span class=\"token punctuation\">-</span>2.compute.internal <span class=\"token comment\"># 등록할 control-plane hostname</span>\n  <span class=\"token key atrule\">kubeletExtraArgs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">cloud-provider</span><span class=\"token punctuation\">:</span> aws <span class=\"token comment\"># cloud-provider 옵션 추가</span>\n<span class=\"token key atrule\">controlPlane</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">localAPIEndpoint</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">advertiseAddress</span><span class=\"token punctuation\">:</span> 10.0.4.xxx\n  <span class=\"token key atrule\">certificateKey</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'f6fcb672782d6f0581a106...'</span> <span class=\"token comment\"># kubeadm init 이후 출력된 certificate key</span></code></pre></div>\n<p>아래와 같은 명령으로 configuration 파일을 적용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubeadm <span class=\"token function\">join</span> <span class=\"token parameter variable\">--config</span> control-plane-join.yaml</code></pre></div>\n</li>\n<li>\n<p>worker 노드 join</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># worker.yaml</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubeadm.k8s.io/v1beta2\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> JoinConfiguration\n<span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">bootstrapToken</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> 123456.a4v4ii39rupz51j3 <span class=\"token comment\"># token 값</span>\n    <span class=\"token key atrule\">apiServerEndpoint</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'10.0.3.xxx:6443'</span> <span class=\"token comment\"># HA가 구축되지 않은 경우, HA가 구축된 경우 LB 엔드포인트 사용</span>\n    <span class=\"token key atrule\">caCertHashes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> sha256<span class=\"token punctuation\">:</span>193feed98fb5fd2b4974<span class=\"token punctuation\">...</span> <span class=\"token comment\"># hash 값</span>\n<span class=\"token key atrule\">nodeRegistration</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ip<span class=\"token punctuation\">-</span>10<span class=\"token punctuation\">-</span>0<span class=\"token punctuation\">-</span>3<span class=\"token punctuation\">-</span>xxx.ap<span class=\"token punctuation\">-</span>northeast<span class=\"token punctuation\">-</span>2.compute.internal <span class=\"token comment\"># worker hostname</span>\n  <span class=\"token key atrule\">kubeletExtraArgs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">cloud-provider</span><span class=\"token punctuation\">:</span> aws <span class=\"token comment\"># cloud-provider 옵션 추가</span></code></pre></div>\n<p>아래와 같은 명령으로 configuration 파일을 적용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubeadm <span class=\"token function\">join</span> <span class=\"token parameter variable\">--config</span> worker.yaml</code></pre></div>\n</li>\n</ul>\n<h3>AWS Controller Manager</h3>\n<p>control plane을 init 했다면 <code class=\"language-text\">AWS Controller Manager</code> 매니페스트 파일을 실행해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># kustomize 설치</span>\n$ <span class=\"token function\">wget</span> https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.5.6/kustomize_v4.5.6_linux_amd64.tar.gz\n$ <span class=\"token function\">gzip</span> <span class=\"token parameter variable\">-d</span> kustomize_v4.5.6_linux_amd64.tar.gz\n$ <span class=\"token function\">tar</span> xvf kustomize_v4.5.6_linux_amd64.tar\n$ <span class=\"token function\">mv</span> ./kustomize  /usr/bin\n\n<span class=\"token comment\"># 매니페스트 파일 설치</span>\n$ kustomize build <span class=\"token string\">'github.com/kubernetes/cloud-provider-aws/examples/existing-cluster/overlays/superset-role/?ref=master'</span> <span class=\"token operator\">|</span> kubectl apply <span class=\"token parameter variable\">-f</span> -</code></pre></div>\n<h3>CNI 플러그인 설치</h3>\n<p>클러스터에서 사용할 CNI 플러그인을 설치한다.</p>\n<p>테스트 환경에서는 Calico를 설치하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl apply <span class=\"token parameter variable\">-f</span> https://docs.projectcalico.org/manifests/calico.yaml</code></pre></div>\n<h3>결과</h3>\n<p>위 작업을 모두 완료하면 성공적으로 클러스터가 구축된 것을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get nodes\nNAME                                            STATUS   ROLES                  AGE    VERSION\nip-10-0-3-xxx.ap-northeast-2.compute.internal   Ready    control-plane,master   16m    v1.21.1\nip-10-0-3-xxx.ap-northeast-2.compute.internal   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>                 13m    v1.21.1\nip-10-0-3-xxx.ap-northeast-2.compute.internal   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>                 2m4s   v1.21.1</code></pre></div>\n<h3>테스트</h3>\n<p>AWS 서비스를 정상적으로 이용할 수 있는지 간단한 테스트를 진행하였다.</p>\n<p>테스트용 Deployment와 Service를 배포한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># nginx-deploy.yaml</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>deploy\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n              <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># nginx-svc.yaml</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>service\n  <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">service.beta.kubernetes.io/aws-load-balancer-type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'nlb'</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> LoadBalancer</code></pre></div>\n<p>정상적으로 AWS의 LB가 생성됨을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get svc\nNAME                                  TYPE           CLUSTER-IP       EXTERNAL-IP                                                                          PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>        AGE\nkubernetes                            ClusterIP      <span class=\"token number\">10.96</span>.0.1        <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>                                                                               <span class=\"token number\">443</span>/TCP        2d15h\nnginx-service                         LoadBalancer   <span class=\"token number\">10.108</span>.29.182    a9524dcbe2481446689a580b9face799-bbd01611be30a1f7.elb.ap-northeast-2.amazonaws.com   <span class=\"token number\">80</span>:31905/TCP   114s</code></pre></div>","fields":{"readingTime":{"text":"7 min read"}},"frontmatter":{"title":"AWS에서 쿠버네티스 클러스터 구축하기","date":"December 14, 2022"}}},"pageContext":{"slug":"/kubeadm-cloud-provider-aws/","previous":{"fields":{"slug":"/k8s-calico-aws/"},"frontmatter":{"title":"쿠버네티스에서 Calico 사용하기 in AWS","tags":["kubernetes","aws","calico","cni"]}},"next":{"fields":{"slug":"/ingress-nginx-413/"},"frontmatter":{"title":"Ingress nginx 413 에러 해결하기","tags":["kubernetes"]}}}},"staticQueryHashes":["3649515864","461697574","983108779"],"slicesMap":{}}