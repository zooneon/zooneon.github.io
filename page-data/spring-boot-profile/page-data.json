{"componentChunkName":"component---src-templates-blog-post-js","path":"/spring-boot-profile/","result":{"data":{"site":{"siteMetadata":{"title":"zooneon's log","author":"zooneon"}},"markdownRemark":{"id":"ac5d8e0d-182c-543f-ba4d-2fe8d43744ea","excerpt":"스프링 부트에서는 properties파일(application.properties)이나 yaml파일(application.yaml)을 사용하여 프로젝트에 원하는 설정들을 적용하거나 수정할 수 있다. 외에도 여러 방법이 있지만(java…","html":"<p>스프링 부트에서는 properties파일(application.properties)이나 yaml파일(application.yaml)을 사용하여 프로젝트에 원하는 설정들을 적용하거나 수정할 수 있다.</p>\n<p>외에도 여러 방법이 있지만(java 코드로 작성하는 방법, 시스템 환경변수를 이용하는 방법 등등) properties파일이나 yaml파일을 이용한 외재화된 설정에 대해 이야기해 보려 한다.</p>\n<h2>profile 적용하기</h2>\n<p>보통 운영 환경별로 설정들이 달라진다.</p>\n<p>사용하는 DB가 다르다던가 로깅 범위 설정, 사용하는 프레임워크의 설정 등등 많은 부분들이 운영 환경에 따라 다르다.</p>\n<p>이를 위해 설정 파일들을 운영 환경별로 분리하여 작성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\">└── resources\n        ├── application.yml\n        ├── application-dev.yml\n        ├── application-local.yml\n        ├── application-prod.yml\n        └── application-test.yml</code></pre></div>\n<p>간단한 예시를 만들어보았다.</p>\n<p>예시로 사용한 스프링 부트 버전은 2.6.6이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application.yml</span>\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">26</span>\n  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/zooneon</code></pre></div>\n<p>테스트를 통해 설정이 잘 등록됐는지 확인해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">dev<span class=\"token punctuation\">.</span>zooneon<span class=\"token punctuation\">.</span>profiledemo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>jupiter<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token import static\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>assertj<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assertions</span><span class=\"token punctuation\">.</span><span class=\"token static\">assertThat</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AppConfigTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AppConfig</span> appConfig<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">propertyTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zooneon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getGithub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://github.com/zooneon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img width=\"698\" alt=\"property\" src=\"https://user-images.githubusercontent.com/59433441/162164497-ee217c5f-289d-4346-852b-9903ea5df40c.png\">\n<p>각각 환경별로 분리된 파일들은 application.yml 파일을 오버라이딩하여 사용한다.</p>\n<p>따라서 공통 설정들은 application.yml에 작성한 뒤, 필요하다면 환경별로 설정들을 오버라이드 하면 된다.</p>\n<p>원하는 프로파일을 적용하기 위해서는 application.yml 파일에서 적용할 프로파일을 등록하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application.yml</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> prod\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">26</span>\n  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/zooneon</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application-prod.yml</span>\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zzzooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></code></pre></div>\n<p>잘 오버라이딩 됐는지 결과를 확인해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">dev<span class=\"token punctuation\">.</span>zooneon<span class=\"token punctuation\">.</span>profiledemo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>jupiter<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token import static\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>assertj<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assertions</span><span class=\"token punctuation\">.</span><span class=\"token static\">assertThat</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AppConfigTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AppConfig</span> appConfig<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">overrideTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zzzooneon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getGithub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://github.com/zooneon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img width=\"714\" alt=\"override\" src=\"https://user-images.githubusercontent.com/59433441/162164517-8c8e9204-eea3-4dd8-a7c7-bcbb240a2d5b.png\">\n<p>jar 파일로 빌드한 뒤 아래와 같은 명령을 통해 파일을 실행시키는 시점에 환경변수를 추가하여 변경할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> myapp.jar <span class=\"token parameter variable\">--spring.profiles.active</span><span class=\"token operator\">=</span>prod</code></pre></div>\n<h2>profile 설정하기</h2>\n<h3>마이그레이션</h3>\n<p>스프링 부트 2.4 이후로 설정 파일을 작성하는 법이 달라졌다.</p>\n<p>만약 스프링 부트 2.4 이전 버전을 사용하고 있다면 다음 명령을 통해 마이그레이션 할 수 있다고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spring.config.use-legacy-processing</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n\n<span class=\"token comment\"># any other properties</span></code></pre></div>\n<h3>spring.config.import</h3>\n<p>스프링 부트 2.4 이후부터는 <code class=\"language-text\">spring.config.import</code>과 <code class=\"language-text\">spring.config.location</code>을 이용하여 원하는 설정 파일을 불러올 수 있다.</p>\n<p>application.yml 파일은 위의 내용과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#zooneon.yml</span>\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">26</span>\n  <span class=\"token key atrule\">univ</span><span class=\"token punctuation\">:</span> Sejong University\n  <span class=\"token key atrule\">major</span><span class=\"token punctuation\">:</span> Computer Engineering</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application-prod.yml</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">import</span><span class=\"token punctuation\">:</span> classpath<span class=\"token punctuation\">:</span>zooneon.yml</code></pre></div>\n<p>제대로 import 되었는지 테스트 해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">dev<span class=\"token punctuation\">.</span>zooneon<span class=\"token punctuation\">.</span>profiledemo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>jupiter<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token import static\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>assertj<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assertions</span><span class=\"token punctuation\">.</span><span class=\"token static\">assertThat</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AppConfigTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AppConfig</span> appConfig<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">importTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zooneon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getUniv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sejong University\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getMajor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Computer Engineering\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img width=\"708\" alt=\"import\" src=\"https://user-images.githubusercontent.com/59433441/162164676-d1c5601f-fbf4-4d78-ba3e-7cf1757e5bc6.png\">\n<p>import는 발견하는 대로 처리하며 import를 선언한 document 아래에 import한 document를 추가한 것처럼 다룬다.</p>\n<p>또한 import한 프로파일에 있는 값은 import를 트리거 한 파일보다 우선시되어 오버라이드 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application-prod.yml</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">import</span><span class=\"token punctuation\">:</span> classpath<span class=\"token punctuation\">:</span>zooneon.yml\n<span class=\"token comment\">#이 값은 오버라이드 될 것이다.</span>\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> junwon</code></pre></div>\n<p>여러 개의 파일을 import 할 수 있는데, 이 경우 뒤에 있는 파일이 우선권을 갖는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application-prod.yml</span>\n<span class=\"token comment\">#test.yml이 우선권을 갖는다.</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">import</span><span class=\"token punctuation\">:</span> classpath<span class=\"token punctuation\">:</span>zooneon.yml<span class=\"token punctuation\">,</span>classpath<span class=\"token punctuation\">:</span>test.yml</code></pre></div>\n<p><code class=\"language-text\">optional</code> 키워드를 사용하여 설정 파일이 존재하지 않아도 어플리케이션이 실행될 수 있도록 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application-prod.yml</span>\n<span class=\"token comment\">#nonexistent.yml 파일이 존재하지 않아도 어플리케이션은 실행된다.</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">import</span><span class=\"token punctuation\">:</span> optional<span class=\"token punctuation\">:</span>classpath<span class=\"token punctuation\">:</span>nonexistent.yml</code></pre></div>\n<h3>Multi-Document File</h3>\n<p>스프링 부트에서는 물리적인 파일 하나를 각각 독립적으로 추가되는 여러 개의 논리적 document로 분리할 수 있다.</p>\n<p>document는 위에서 아래 순으로 처리되기 때문에 뒤에 있는 document는 앞에 있는 document를 오버라이드 할 수 있다.</p>\n<p>yaml파일에서는 구분자(<code class=\"language-text\">---</code>)로 구분할 수 있다.(스프링 부트 2.4부터 properties파일도 <code class=\"language-text\">#---</code>를 이용할 수 있다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application-prod.yml</span>\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zzzooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span>\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> junwon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">dev<span class=\"token punctuation\">.</span>zooneon<span class=\"token punctuation\">.</span>profiledemo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>jupiter<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token import static\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>assertj<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assertions</span><span class=\"token punctuation\">.</span><span class=\"token static\">assertThat</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AppConfigTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AppConfig</span> appConfig<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">separatorTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"junwon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getGithub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://github.com/zooneon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그럼 프로파일별로 다른 설정값을 사용해야 할 때는 어떻게 정의할까?</p>\n<p>그럴 때는 <code class=\"language-text\">spring.config.activate.on-profile</code> 속성을 사용하면 된다.</p>\n<p>위에서 말했듯이 multi document에서 document는 위에서 아래로 처리되기 때문에 activate.on-profile 속성이 없으면 제일 마지막 설정값이 적용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#zooneon.yml</span>\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">26</span>\n  <span class=\"token key atrule\">univ</span><span class=\"token punctuation\">:</span> Sejong University\n  <span class=\"token key atrule\">major</span><span class=\"token punctuation\">:</span> Computer Engineering\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">spring.config.activate.on-profile</span><span class=\"token punctuation\">:</span> test\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zzzooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">19</span>\n  <span class=\"token key atrule\">univ</span><span class=\"token punctuation\">:</span> Not attending\n  <span class=\"token key atrule\">major</span><span class=\"token punctuation\">:</span> None\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">spring.config.activate.on-profile</span><span class=\"token punctuation\">:</span> prod\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> junwon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">27</span>\n  <span class=\"token key atrule\">univ</span><span class=\"token punctuation\">:</span> Graduate\n  <span class=\"token key atrule\">major</span><span class=\"token punctuation\">:</span> Computer Engineering</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application.yml</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> test\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">26</span>\n  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/zooneon</code></pre></div>\n<p>설정값이 제대로 등록되었는지 확인해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">dev<span class=\"token punctuation\">.</span>zooneon<span class=\"token punctuation\">.</span>profiledemo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>jupiter<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token import static\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>assertj<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assertions</span><span class=\"token punctuation\">.</span><span class=\"token static\">assertThat</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AppConfigTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AppConfig</span> appConfig<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">multiDocumentTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zzzooneon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getUniv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not attending\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getMajor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/59433441/162164717-b3909f71-a1b8-4c64-b318-d5e91500274c.png\" alt=\"multi document\"></p>\n<p>스프링 부트 2.4 이전에는 <code class=\"language-text\">spring.profiles</code> 을 이용하여 각 프로파일에서 사용할 설정값들을 작성하였는데 이는 deprecated 되었다.</p>\n<p>그렇기 때문에 이제 <code class=\"language-text\">spring.config.activate.on-profile</code>을 이용하자</p>\n<p><img src=\"https://user-images.githubusercontent.com/59433441/162164738-07b34893-a4c3-4409-bc6a-4b647462d6bd.png\" alt=\"deprecated\"></p>\n<p>하지만 여기서 알아둘 것이 하나 있다.</p>\n<p>스프링 부트 2.4 이전 사용자들은 아마 <code class=\"language-text\">spring.profiles</code>로 적용할 프로파일을 설정하고 <code class=\"language-text\">spring.profiles.include</code>를 사용하여 원하는 프로파일을 불러와서 사용했을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application.yml</span>\n<span class=\"token comment\">#legacy mode 사용</span>\n<span class=\"token key atrule\">spring.config.use-legacy-processing</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> prod\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">spring.profiles</span><span class=\"token punctuation\">:</span> prod\n<span class=\"token key atrule\">spring.profiles.include</span><span class=\"token punctuation\">:</span> database\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> junwon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">26</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application-database.yml</span>\n<span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1234</span></code></pre></div>\n<p>스프링 부트 2.4 이후부터는 <code class=\"language-text\">spring.config.activate.on-profile</code>을 사용한 document에서 <code class=\"language-text\">spring.profiles.include</code>를 사용할 수 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application.yml</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> test2\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">activate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">on-profile</span><span class=\"token punctuation\">:</span> test2\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">include</span><span class=\"token punctuation\">:</span> database<span class=\"token punctuation\">,</span> test</code></pre></div>\n<p>이렇게 설정하면 <code class=\"language-text\">InactiveConfigDataAccessException</code> 예외가 발생하게 된다.</p>\n<img width=\"954\" alt=\"include with on profile property\" src=\"https://user-images.githubusercontent.com/59433441/162164786-37fc1969-7cce-4c7f-b1b0-bc321fe2f05e.png\">\n<p>따라서 include를 사용하기 위해서는 on-profile 속성과 다른 document에서 사용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application.yml</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> test2\n    <span class=\"token key atrule\">include</span><span class=\"token punctuation\">:</span> database\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">26</span>\n  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/zooneon\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">activate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">on-profile</span><span class=\"token punctuation\">:</span> test2\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zzzooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span></code></pre></div>\n<p>테스트를 하다가 알게 된 사실인데 include를 하게 되면 하단 document에서 오버라이드한 속성을 무시하는 것 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application.yml</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> test2\n    <span class=\"token key atrule\">include</span><span class=\"token punctuation\">:</span> database\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">26</span>\n  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/zooneon\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">activate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">on-profile</span><span class=\"token punctuation\">:</span> test2\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zzzooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span>\n<span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> test2<span class=\"token punctuation\">-</span>user\n  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> test2<span class=\"token punctuation\">-</span>user</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application-database.yml</span>\n<span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1234</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">dev<span class=\"token punctuation\">.</span>zooneon<span class=\"token punctuation\">.</span>profiledemo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>jupiter<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token import static\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>assertj<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assertions</span><span class=\"token punctuation\">.</span><span class=\"token static\">assertThat</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AppConfigTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AppConfig</span> appConfig<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">includeIgnoreOverrideTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zzzooneon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getDbUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getDbPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>application.yml 파일에서 볼 수 있듯이 test2 프로파일에서 me와 db 속성을 오버라이드 하였다.</p>\n<p>테스트코드를 보면 me 속성은 오버라이드 한 결과로 나왔지만 include한 db 속성의 경우 오버라이드 한 값이 아닌 include 한 값이 저장된다.</p>\n<p>테스트는 통과한다.</p>\n<img width=\"700\" alt=\"include ignore override\" src=\"https://user-images.githubusercontent.com/59433441/162164821-c86b5026-4de9-46a6-9f64-b22eafd8ab4f.png\">\n<p>혹시 선언 순서 때문에 그런가 해서 active와 include의 순서를 바꿔보았는데도 결과는 같았다.</p>\n<p>include도 import처럼 트리거 한 파일보다 우선시되는 것 같다.</p>\n<h3>spring.profiles.group</h3>\n<p>스프링 부트 2.4부터는 <code class=\"language-text\">spring.profiles.group</code> 속성을 통해 원하는 프로파일을 grouping 할 수 있다.</p>\n<p>예를 들어 환경별로 사용해야 하는 프로파일이 다를 경우 필요한 프로파일을 group에 추가하여 사용할 수 있다.</p>\n<p>zooneon.yml 파일의 내용은 위와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\">#application.yml</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> prod\n    <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">prod</span><span class=\"token punctuation\">:</span> zooneon<span class=\"token punctuation\">,</span> prod<span class=\"token punctuation\">-</span>db\n      <span class=\"token key atrule\">test</span><span class=\"token punctuation\">:</span> zooneon<span class=\"token punctuation\">,</span> test<span class=\"token punctuation\">-</span>db\n<span class=\"token key atrule\">me</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nickname</span><span class=\"token punctuation\">:</span> zooneon\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">26</span>\n  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/zooneon\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">activate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">on-profile</span><span class=\"token punctuation\">:</span> prod<span class=\"token punctuation\">-</span>db\n<span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> prod<span class=\"token punctuation\">-</span>user\n  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> qwerty<span class=\"token tag\">!@</span>\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">activate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">on-profile</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>db\n<span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>user\n  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1234</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">dev<span class=\"token punctuation\">.</span>zooneon<span class=\"token punctuation\">.</span>profiledemo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>jupiter<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token import static\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>assertj<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assertions</span><span class=\"token punctuation\">.</span><span class=\"token static\">assertThat</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AppConfigTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AppConfig</span> appConfig<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">groupTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"junwon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getDbUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prod-user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getDbPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"qwerty!@\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>맨 상단에 group을 선언하여 prod에서는 zooneon, prod-db 프로파일을 사용하고 test에서는 zooneon, test-db 프로파일을 사용하도록 하였다.</p>\n<p>테스트 결과를 보면 active를 prod로 선언하였기 때문에 zooneon, prod-db 프로파일이 사용된 것을 확인할 수 있다.</p>\n<p>zooneon 프로파일에서는 <code class=\"language-text\">on-active: prod</code>로 오버라이드한 값이 사용되었다.</p>\n<p>group 속성도 include와 마찬가지로 on-profile 속성을 사용한 document와 함께 사용하면 <code class=\"language-text\">InactiveConfigDataAccessException</code> 예외가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">prod</span><span class=\"token punctuation\">:</span> zooneon<span class=\"token punctuation\">,</span> prod<span class=\"token punctuation\">-</span>db\n      <span class=\"token key atrule\">test</span><span class=\"token punctuation\">:</span> zooneon<span class=\"token punctuation\">,</span> test<span class=\"token punctuation\">-</span>db\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">activate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">on-profile</span><span class=\"token punctuation\">:</span> test2</code></pre></div>\n<img width=\"953\" alt=\"group with on-profile property\" src=\"https://user-images.githubusercontent.com/59433441/162164848-3ceb1665-4491-4229-a62c-296e2fea26d9.png\">\n<h2>마무리</h2>\n<p>스프링 부트 2.4 이후의 프로파일 설정하는 방법을 간단하게 알아보았다.</p>\n<p>2.4 이전 버전과 많이 달라졌다고 하는데 사실 2.4 이전 버전을 사용해 보지 않아서 차이가 확 와닿지는 않는 것 같다.</p>\n<p>사실 지금까지 했던 프로젝트들도 모두 간단한 프로젝트이고 설정들도 복잡하지 않았기 때문에 잘 모르고 사용했던 것 같다.</p>\n<p>찾아보니 생각보다 많은 기능이 있었고, 이를 활용하면 재사용성도 높아지고 더 깔끔하게 관리할 수 있을 것 같다는 생각이 들었다.</p>\n<hr>\n<h3>참고</h3>\n<ul>\n<li><a href=\"https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Config-Data-Migration-Guide#multi-document-yaml-ordering\">https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Config-Data-Migration-Guide#multi-document-yaml-ordering</a></li>\n</ul>","fields":{"readingTime":{"text":"12 min read"}},"frontmatter":{"title":"Spring Boot profile 설정하기","date":"April 07, 2022"}}},"pageContext":{"slug":"/spring-boot-profile/","previous":{"fields":{"slug":"/use-objectmapper-to-parse-json/"},"frontmatter":{"title":"ObjectMapper를 이용하여 JSON 파싱하기","tags":null}},"next":{"fields":{"slug":"/aws-codedeploy-environment-variables/"},"frontmatter":{"title":"AWS CodeDeploy를 이용한 자동 배포 시 환경변수 주입하기 + Spring Boot","tags":["aws"]}}}},"staticQueryHashes":["3649515864","461697574","983108779"],"slicesMap":{}}