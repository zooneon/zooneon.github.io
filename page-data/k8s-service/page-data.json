{"componentChunkName":"component---src-templates-blog-post-js","path":"/k8s-service/","result":{"data":{"site":{"siteMetadata":{"title":"zooneon's log","author":"zooneon"}},"markdownRemark":{"id":"4267fc22-4ec9-5d3a-a7b8-79490c9f8d26","excerpt":"서비스 개념 파드는 컨트롤러가 관리하므로 한군데에 고정해서 실행되지 않고 클러스터 안을 옮겨 다님 노드를 옮기면서 실행되기도 하고 클러스터 안 파드의 IP…","html":"<h2>서비스 개념</h2>\n<ul>\n<li>파드는 컨트롤러가 관리하므로 한군데에 고정해서 실행되지 않고 클러스터 안을 옮겨 다님</li>\n<li>노드를 옮기면서 실행되기도 하고 클러스터 안 파드의 IP가 변경되기도 함</li>\n<li>동적으로 변하는 파드들에 고정적으로 접근할 때 사용하는 방법이 쿠버네티스의 <code class=\"language-text\">서비스</code></li>\n<li>서비스를 사용하면 고정 주소를 이용해 파드에 접근 가능</li>\n<li>클러스터 외부에서 클러스터 안 파드에 접근 가능\n<ul>\n<li>클러스터 외부에서 인그레스 <code class=\"language-text\">Ingress</code> 로도 접근할 수 있지만 서비스는 주로 L4 영역에서 통신할 때 사용하고 인그레스는 L7 영역에서 통신할 때 사용</li>\n<li>두 가지를 혼합해서 사용할 수도 있지만 보통 역할을 분리해서 사용</li>\n</ul>\n</li>\n</ul>\n<h2>서비스 타입</h2>\n<ul>\n<li>ClusterIP\n<ul>\n<li>기본 서비스 타입</li>\n<li>쿠버네티스 클러스터 안에서만 사용 가능</li>\n<li>클러스터 안 노드나 파드에서는 ClusterIP를 이용해서 서비스에 연결된 파드에 접근</li>\n<li>클러스터 외부에서는 이용 불가능</li>\n</ul>\n</li>\n<li>NodePort\n<ul>\n<li>서비스 하나에 모든 노드의 지정된 포트를 할당\n<ul>\n<li>포트번호 지정 안할 시 <code class=\"language-text\">30000 ~ 32768</code> 랜덤포트 사용</li>\n</ul>\n</li>\n<li>노드에 상관없이 서비스에 지정된 포트 번호만 사용하면 파드에 접근 가능</li>\n<li>노드의 포트를 사용하므로 클러스터 외부에서도 접근 가능</li>\n<li>node1에서 파드가 실행 중이고 node2에서 실행 중이지 않을 때 node2로 접근해도 node1에 실행된 파드로 연결 가능\n<ul>\n<li>단 <code class=\"language-text\">second hop</code> 문제 발생 가능 → latency 발생</li>\n</ul>\n</li>\n<li>클러스터 외부에서 클러스터 안 파드로 접근할 때 사용할 수 있는 가장 간단한 방법</li>\n</ul>\n</li>\n<li>LoadBalancer\n<ul>\n<li>AWS, GCP, OpenStack, 쿠버네티스를 지원하는 로드밸런서 장비에서 사용</li>\n<li>클라우드에서 제공하는 로드밸런서와 파드를 연결한 후 해당 로드밸런서의 IP를 이용해 클러스터 외부에서 파드에 접근할 수 있도록 해줌</li>\n<li>서비스 타입 <code class=\"language-text\">LoadBalancer</code> 를 사용할 경우 <code class=\"language-text\">kubectl get svc</code> 명령을 실행했을 때 <code class=\"language-text\">EXTERNAL-IP</code> 항목에 로드밸런서 IP 확인 가능</li>\n<li>해당 IP를 사용해 클러스터 외부에서 파드에 접근</li>\n</ul>\n</li>\n<li>ExternalName\n<ul>\n<li>서비스를 <code class=\"language-text\">.spec.externalName</code> 필드에 설정한 값과 연결</li>\n<li>클러스터 안에서 외부에 접근할 때 주로 사용\n<ul>\n<li>언제 클러스터 안에서 외부로 접근할까?</li>\n</ul>\n</li>\n<li><code class=\"language-text\">ExternalName</code> 서비스로 클러스터 외부에 접근하면 설정해둔 <code class=\"language-text\">CNAME</code> 값을 이용해 클러스터 외부에 접근 가능</li>\n<li>클러스터 외부에 접근할 때 사용하는 값이므로 설정할 때 <code class=\"language-text\">selector(.spec.selector)</code> 필드가 필요 없음\n<ul>\n<li><code class=\"language-text\">selector</code> 필드는 서비스의 백엔드 파드를 지정할 때 사용</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>서비스 사용</h2>\n<h3>ClusterIP</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> clusterip<span class=\"token punctuation\">-</span>service <span class=\"token comment\">#1</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP <span class=\"token comment\">#2</span>\n  <span class=\"token key atrule\">clusterIP</span><span class=\"token punctuation\">:</span> 10.10.10.10 <span class=\"token comment\">#3</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 4</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>app\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#5</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span></code></pre></div>\n<p><code class=\"language-text\">#1</code></p>\n<ul>\n<li>서비스의 이름 지정</li>\n</ul>\n<p><code class=\"language-text\">#2</code></p>\n<ul>\n<li>서비스 타입으로 ClusterIP 이용</li>\n<li>타입 지정 안할 시 기본적으로 ClusterIP 이용</li>\n</ul>\n<p><code class=\"language-text\">#3</code></p>\n<ul>\n<li>클러스터 IP 직접 설정할 때 사용</li>\n</ul>\n<p><code class=\"language-text\">#4</code></p>\n<ul>\n<li>서비스에 연결할 백엔드 파드의 label 지정</li>\n</ul>\n<p><code class=\"language-text\">#5</code></p>\n<ul>\n<li>서비스에서 사용할 포트 정보</li>\n<li>현재는 TCP 프로토콜을 사용하며 서비스 포트 80번으로 요청을 받아 파드의 8080번 포트로 전달한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get <span class=\"token function\">service</span>\nNAME                TYPE        CLUSTER-IP    EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>   AGE\nclusterip-service   ClusterIP   <span class=\"token number\">10.10</span>.10.10   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">80</span>/TCP    17s</code></pre></div>\n<p>→ <code class=\"language-text\">CLUSTER-IP</code> 생성되고 외부 IP는 존재하지 않으므로 <code class=\"language-text\">EXTERNAL-IP</code>는 <code class=\"language-text\">&lt;none></code></p>\n<h3>NodePort</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nodeport<span class=\"token punctuation\">-</span>service\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort <span class=\"token comment\">#1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>app <span class=\"token comment\">#2</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30001</span> <span class=\"token comment\">#3</span></code></pre></div>\n<p><code class=\"language-text\">#1</code></p>\n<ul>\n<li>서비스 타입으로 NodePort 이용</li>\n</ul>\n<p><code class=\"language-text\">#2</code></p>\n<ul>\n<li>서비스에 연결할 백엔드 파드의 label 지정</li>\n</ul>\n<p><code class=\"language-text\">#3</code></p>\n<ul>\n<li>노드의 30001번 포트 사용</li>\n<li>모든 노드의 30001번 포트를 이용하여 접근 가능</li>\n<li>포트번호 지정 안할 시 <code class=\"language-text\">30000 ~ 32768</code> 랜덤포트 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get <span class=\"token function\">service</span>\nNAME               TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>        AGE\nnodeport-service   NodePort    <span class=\"token number\">10.103</span>.127.52   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">80</span>:30001/TCP   19s</code></pre></div>\n<p>→ NodePort 타입이지만 <code class=\"language-text\">CLUSTER-IP</code>가 생성되고 노드의 30001번 포트가 <code class=\"language-text\">CLUSTER-IP</code>타입 서비스의 80번 포트와 연결됨</p>\n<h3>LoadBalancer</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">-</span>service\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> LoadBalancer <span class=\"token comment\">#1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#2</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>app\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<p><code class=\"language-text\">#1</code></p>\n<ul>\n<li>서비스 타입으로 LoadBalancer 이용</li>\n</ul>\n<p><code class=\"language-text\">#2</code></p>\n<ul>\n<li>서비스에 연결할 백엔드 파드의 label 지정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get <span class=\"token function\">service</span>\nNAME         TYPE           CLUSTER-IP      EXTERNAL-IP     PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>        AGE\nlb-service   LoadBalancer   <span class=\"token number\">10.107</span>.254.85   <span class=\"token number\">192.168</span>.0.181   <span class=\"token number\">80</span>:31203/TCP   9s</code></pre></div>\n<p>→ <code class=\"language-text\">EXTERNAL-IP</code>가 생성되고 해당 IP를 통해 파드에 접근 가능</p>\n<p>→ <code class=\"language-text\">EXTERNAL-IP</code>로 요청을 보내면 트래픽은 노드의 31203번 포트로 들어온 뒤 파드의 targetPort로 들어감</p>\n<h3>ExternalName</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> externalname<span class=\"token punctuation\">-</span>service\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ExternalName <span class=\"token comment\">#1</span>\n  <span class=\"token key atrule\">externalName</span><span class=\"token punctuation\">:</span> google.com <span class=\"token comment\">#2</span></code></pre></div>\n<p><code class=\"language-text\">#1</code></p>\n<ul>\n<li>서비스 타입으로 ExternalName 이용</li>\n</ul>\n<p><code class=\"language-text\">#2</code></p>\n<ul>\n<li>연결하려는 외부 도메인 값 설정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get <span class=\"token function\">service</span>\nNAME                   TYPE           CLUSTER-IP   EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>   AGE\nexternalname-service   ExternalName   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>       google.com    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>    1s\n\n$ kubectl <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> netshoot -- <span class=\"token function\">curl</span> externalname-service.default.svc.cluster.local\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>html <span class=\"token assign-left variable\">lang</span><span class=\"token operator\">=</span>en<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>meta <span class=\"token assign-left variable\">charset</span><span class=\"token operator\">=</span>utf-<span class=\"token operator\"><span class=\"token file-descriptor important\">8</span>></span>\n  <span class=\"token operator\">&lt;</span>meta <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span>viewport <span class=\"token assign-left variable\">content</span><span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=1, minimum-scale=1, width=device-width\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Error <span class=\"token number\">404</span> <span class=\"token punctuation\">(</span>Not Found<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&lt;</span>/title<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n    *<span class=\"token punctuation\">{</span>margin:0<span class=\"token punctuation\">;</span>padding:0<span class=\"token punctuation\">}</span>html,code<span class=\"token punctuation\">{</span>font:15px/22px arial,sans-serif<span class=\"token punctuation\">}</span>html<span class=\"token punctuation\">{</span>background:<span class=\"token comment\">#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* > body{background:url(//www.google.com/images/errors/robot.png) 100% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(//www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0% 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}</span>\n  <span class=\"token operator\">&lt;</span>/style<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>a <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span>//www.google.com/<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>span <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span>logo aria-label<span class=\"token operator\">=</span>Google<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/span<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/a<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>b<span class=\"token operator\">></span><span class=\"token number\">404</span>.<span class=\"token operator\">&lt;</span>/b<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>ins<span class=\"token operator\">></span>That’s an error.<span class=\"token operator\">&lt;</span>/ins<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>The requested URL <span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>/code<span class=\"token operator\">></span> was not found on this server.  <span class=\"token operator\">&lt;</span>ins<span class=\"token operator\">></span>That’s all we know.<span class=\"token operator\">&lt;</span>/ins<span class=\"token operator\">></span>\n\n$ kubectl <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> netshoot -- <span class=\"token function\">dig</span> externalname-service.default.svc.cluster.local\n<span class=\"token punctuation\">..</span>\n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> ANSWER SECTION:\nexternalname-service.default.svc.cluster.local.\t<span class=\"token number\">30</span> IN CNAME google.com.\ngoogle.com.\t\t<span class=\"token number\">30</span>\tIN\tA\t<span class=\"token number\">172.217</span>.161.238</code></pre></div>\n<p>→ <code class=\"language-text\">ExternalName</code>을 이용하여 google.com에 접속</p>\n<p>→ google.com에 대한 CNAME 레코드 생성</p>\n<h2>헤드리스 서비스</h2>\n<ul>\n<li><code class=\"language-text\">.spec.clusterIP</code> 필드 값을 <code class=\"language-text\">None</code>으로 설정하면 클러스터 IP가 없는 <code class=\"language-text\">헤드리스 서비스</code>를 만들 수 있음</li>\n<li>로드밸런싱이 필요 없거나 단일 서비스 IP가 필요 없을 때 사용</li>\n<li><code class=\"language-text\">.spec.selector</code> 필드에 파드를 지정하면 쿠버네티스 API로 확인할 수 있는 엔드포인트가 생성됨\n<ul>\n<li>서비스와 연결된 파드를 직접 가리키는 DNS A 레코드도 생성</li>\n<li>selector가 없다면 엔드포인트는 만들어지지 않음</li>\n</ul>\n</li>\n<li><code class=\"language-text\">ExternalName</code> 서비스에서 사용할 CNAME 레코드 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> headless<span class=\"token punctuation\">-</span>service\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP\n  <span class=\"token key atrule\">clusterIP</span><span class=\"token punctuation\">:</span> None\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>app\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get <span class=\"token function\">service</span>\nNAME               TYPE        CLUSTER-IP   EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>   AGE\nheadless-service   ClusterIP   None         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">80</span>/TCP    2s</code></pre></div>\n<p>→ CLUSTER-IP와 EXTERNAL-IP 모두 none</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl describe <span class=\"token function\">service</span> headless-service\nName:              headless-service\nNamespace:         default\nLabels:            <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nAnnotations:       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nSelector:          <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>my-app\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                None\nIPs:               None\nPort:              <span class=\"token operator\">&lt;</span>unset<span class=\"token operator\">></span>  <span class=\"token number\">80</span>/TCP\nTargetPort:        <span class=\"token number\">80</span>/TCP\nEndpoints:         <span class=\"token number\">10.244</span>.189.76:80,10.244.235.175:80\nSession Affinity:  None\nEvents:            <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span></code></pre></div>\n<p>→ 파드에 대한 엔드포인트 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> netshoot -- <span class=\"token function\">bash</span>\nbash-5.2<span class=\"token comment\"># dig headless-service.default.svc.cluster.local</span>\n<span class=\"token punctuation\">..</span>\n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> ANSWER SECTION:\nheadless-service.default.svc.cluster.local. <span class=\"token number\">30</span> IN A <span class=\"token number\">10.244</span>.189.76\nheadless-service.default.svc.cluster.local. <span class=\"token number\">30</span> IN A <span class=\"token number\">10.244</span>.235.175</code></pre></div>\n<p>→ 파드에 대한 A 레코드 생성</p>\n<br/>\n<hr>\n<p>참고</p>\n<ul>\n<li><a href=\"http://www.yes24.com/Product/Goods/85578606\">쿠버네티스 입문</a></li>\n</ul>","fields":{"readingTime":{"text":"9 min read"}},"frontmatter":{"title":"쿠버네티스 서비스","date":"November 16, 2022"}}},"pageContext":{"slug":"/k8s-service/","previous":{"fields":{"slug":"/multiple-az-k8s-cluster/"},"frontmatter":{"title":"다중 가용 영역 기반의 쿠버네티스 클러스터","tags":["kubernetes","ha"]}},"next":{"fields":{"slug":"/k8s-calico-aws/"},"frontmatter":{"title":"쿠버네티스에서 Calico 사용하기 in AWS","tags":["kubernetes","aws","calico","cni"]}}}},"staticQueryHashes":["3649515864","461697574","983108779"],"slicesMap":{}}